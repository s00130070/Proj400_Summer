@model Proj400.Models.ProductInfo

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<div class="panel well">
    <div class="panel-heading">
        <h3>Edit @Model.product_Name</h3>
    </div>
    @using (Html.BeginForm("Edit", "Admin", FormMethod.Post, new { enctype = "multipart/form-data" }))
    { 
//Without the enctype attribute, the browser will transmit only the name of the file and not its content
        <div class="panel-body">
            @Html.HiddenFor(x => x.product_ID)
            @foreach (var property in ViewData.ModelMetadata.Properties)
            {
                switch (property.PropertyName)
                {
                    case "product_ID":
                    case "Image_Data":
                    case "Image_Mime_Type":
                        // do nothing
                        break;
                    default:
                        //if (property.PropertyName != "product_ID")
                        //{
                    @Html.ValidationMessage(property.PropertyName)
                    <div class="form-group">
                        <label>
                            @(property.DisplayName ?? property.PropertyName)
                        </label>
                        @if (property.PropertyName == "product_Desc")
                        {
                            @Html.TextArea(property.PropertyName, null, new { @class = "form-control", rows = 5 })
                        }
                        else
                        {
                            @Html.TextBox(property.PropertyName, null, new { @class = "form-control" })
                        }

                    </div>
                @*}*@
                    break;
                }
            }


            <div class="form-group">
                <div style="position:relative;">
                    <label>Image</label>
                    <a class='btn' href='javascript:;'>
                        Choose File...
                        <input type="file" name="Image" size="50" 
                               onchange='$("#upload-fileinfo").html($(this).val());'>
                    </a>
                    <span class='label label-info' id="upload-file-info"> </span>
                </div>
                @if (Model.Image_Data == null)
                {

                <div class="form-control-static">No Image </div>
                }
                else
                {
                    <img class="img-thumbnail" width="150" height="150" src="@Url.Action("GetImage", "ProductInfo",new { Model.product_ID })" />
                }
            </div>








        </div>
        <div class="panel-footer">
            <input type="submit" value="Save" class="btn btn-success" />
            @Html.ActionLink("Cancel and return to List", "Index", null, new { @class = "btn btn-danger" })
        </div>
    }
    </div>






    @*<h2>Edit</h2>

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>ProductInfo</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.product_ID)

                <div class="form-group">
                    @Html.LabelFor(model => model.product_Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.product_Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.product_Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.product_Category, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.product_Category, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.product_Category, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.product_Type, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.product_Type, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.product_Type, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.product_Brand, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.product_Brand, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.product_Brand, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.product_Color, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.product_Color, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.product_Color, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.product_Desc, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.product_Desc, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.product_Desc, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.product_Price, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.product_Price, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.product_Price, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.product_Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.product_Quantity, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.product_Quantity, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }

        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>*@
